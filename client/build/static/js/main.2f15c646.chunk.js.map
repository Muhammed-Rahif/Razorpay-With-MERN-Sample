{"version":3,"sources":["helpers/helper.js","App.js","index.js"],"names":["getProducts","Promise","resolve","reject","axios","get","then","response","data","catch","err","console","error","App","useState","products","setProducts","useEffect","a","fetchProduct","handleCheckout","product","post","directCheckout","log","checkoutRazorpay","options","key","amount","currency","name","description","image","order_id","id","handler","razorpay_payment_id","razorpay_order_id","razorpay_signature","alert","notes","address","theme","color","rzp1","window","Razorpay","on","code","source","step","reason","metadata","payment_id","open","className","map","price","onClick","e","target","tagName","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAUMA,EAAc,kBAClB,IAAIC,SAAQ,SAACC,EAASC,GACpBC,IACGC,IAAI,gBACJC,MAAK,SAAAC,GAAQ,OAAIL,EAAQK,EAASC,SAClCC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,U,OCqEnBG,MA/Ef,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACNC,EADM,KACIC,EADJ,KAGbC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACuBlB,IADvB,OACMe,EADN,OAEEC,EAAYD,GAFd,4CADc,uBAAC,WAAD,wBAKdI,KACC,IAEH,IAAMC,EAAiB,SAAAC,IDdF,SAAAA,GAAO,OAC5B,IAAIpB,SAAQ,SAACC,EAASC,GACpBC,IACGkB,KAAK,+BAAgCD,GACrCf,MAAK,SAAAC,GAAQ,OAAIL,EAAQK,EAASC,SAClCC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,UCU9Ba,CAAeF,GAASf,MAAK,SAAAC,GAC3BI,QAAQa,IAAI,CAAEjB,aACdkB,EAAiBlB,OAIfkB,EAAmB,SAAAjB,GACvB,IAAIkB,EAAU,CACZC,IAAK,0BACLC,OAAsB,IAAdpB,EAAKoB,OACbC,SAAU,MACVC,KAAM,iBACNC,YAAa,iDACbC,MAAO,mDACPC,SAAUzB,EAAK0B,GACfC,QAAS,SAAU5B,GACjBI,QAAQa,IAAIjB,EAAS6B,qBACrBzB,QAAQa,IAAIjB,EAAS8B,mBACrB1B,QAAQa,IAAIjB,EAAS+B,oBACrBC,MAAM,qBAORC,MAAO,CACLC,QAAS,6BAEXC,MAAO,CACLC,MAAO,YAGPC,EAAO,IAAIC,OAAOC,SAASpB,GAC/BkB,EAAKG,GAAG,kBAAkB,SAAUxC,GAClCI,QAAQa,IAAIjB,EAASK,MAAMoC,MAC3BrC,QAAQa,IAAIjB,EAASK,MAAMmB,aAC3BpB,QAAQa,IAAIjB,EAASK,MAAMqC,QAC3BtC,QAAQa,IAAIjB,EAASK,MAAMsC,MAC3BvC,QAAQa,IAAIjB,EAASK,MAAMuC,QAC3BxC,QAAQa,IAAIjB,EAASK,MAAMwC,SAASnB,UACpCtB,QAAQa,IAAIjB,EAASK,MAAMwC,SAASC,YACpCd,MAAMhC,EAASK,MAAMmB,gBAEvBa,EAAKU,QAGP,OACE,qBAAKC,UAAU,MAAf,SAIGxC,EAASyC,KAAI,SAACnC,EAASM,GAAV,OACZ,wBAAC,cAAD,2BACMN,GADN,IAEEoC,MAAK,aAAQpC,EAAQoC,OACrB9B,IAAKA,EACL+B,QAAS,SAAAC,GACkB,MAArBA,EAAEC,OAAOC,SACbzC,EAAeC,aCvE3ByC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2f15c646.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst directCheckout = product =>\n  new Promise((resolve, reject) => {\n    axios\n      .post(\"/api/payment/direct-checkout\", product)\n      .then(response => resolve(response.data))\n      .catch(err => console.error(err));\n  });\n\nconst getProducts = () =>\n  new Promise((resolve, reject) => {\n    axios\n      .get(\"/api/product\")\n      .then(response => resolve(response.data))\n      .catch(err => console.error(err));\n  });\n\nexport { directCheckout, getProducts };\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { ProductCard } from \"react-ui-cards\";\nimport { getProducts, directCheckout } from \"./helpers/helper\";\n\nfunction App() {\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    async function fetchProduct() {\n      let products = await getProducts();\n      setProducts(products);\n    }\n    fetchProduct();\n  }, []);\n\n  const handleCheckout = product => {\n    directCheckout(product).then(response => {\n      console.log({ response });\n      checkoutRazorpay(response);\n    });\n  };\n\n  const checkoutRazorpay = data => {\n    var options = {\n      key: \"rzp_test_1EOPkPto7Fxrni\", // Enter the Key ID generated from the Dashboard\n      amount: data.amount * 100, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\n      currency: \"INR\",\n      name: \"Muhammed Rahif\",\n      description: \"Test Transaction with Razorpay payment gateway\",\n      image: \"https://avatars.githubusercontent.com/u/73386156\",\n      order_id: data.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\n      handler: function (response) {\n        console.log(response.razorpay_payment_id);\n        console.log(response.razorpay_order_id);\n        console.log(response.razorpay_signature);\n        alert(\"Payment success!\");\n      },\n      // prefill: {\n      //   name: \"Gaurav Kumar\",\n      //   email: \"gaurav.kumar@example.com\",\n      //   contact: \"9999999999\",\n      // },\n      notes: {\n        address: \"Razorpay Corporate Office\",\n      },\n      theme: {\n        color: \"#61dafb\",\n      },\n    };\n    let rzp1 = new window.Razorpay(options);\n    rzp1.on(\"payment.failed\", function (response) {\n      console.log(response.error.code);\n      console.log(response.error.description);\n      console.log(response.error.source);\n      console.log(response.error.step);\n      console.log(response.error.reason);\n      console.log(response.error.metadata.order_id);\n      console.log(response.error.metadata.payment_id);\n      alert(response.error.description);\n    });\n    rzp1.open();\n  };\n\n  return (\n    <div className=\"App\">\n      {/* <div className=\"checkoutBtnWrapper\">\n        <button className=\"checkoutBtn\">Checkout</button>\n      </div> */}\n      {products.map((product, key) => (\n        <ProductCard\n          {...product}\n          price={`Rs.${product.price}`}\n          key={key}\n          onClick={e => {\n            if (e.target.tagName !== \"A\") return;\n            handleCheckout(product);\n          }}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}